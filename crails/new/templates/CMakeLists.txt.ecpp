#include <algorithm>
#include <list>

std::string @project_name;
std::string @configuration_type = "full";
std::list<std::string>& @formats;

// END LINKING
cmake_minimum_required(VERSION 3.0)

project(<%= project_name %>)

set(CMAKE_CXX_FLAGS "-std=c++17 -Wall -Wno-unknown-pragmas -Wno-deprecated-declarations -pedantic ")

find_package(Boost COMPONENTS thread filesystem program_options system random REQUIRED)

include_directories(include /usr/local/include ${Boost_INCLUDE_DIRS} .)

file(GLOB_RECURSE crails_app
  app/controllers/*.cpp
  app/controllers/*.cxx
  app/models/*.cpp
  app/models/*.cxx
  app/views/*.cpp
  app/views/*.cxx
  app/routes.cpp
  config/*.cpp
  lib/*.cpp
  lib/*.cxx
  modules/*.cpp
  modules/*.cxx)

file(GLOB_RECURSE server_files
     app/main.cpp)

file(GLOB_RECURSE tests_files
     spec/*.cpp)

# Add your modules here (do not modify this line)
<% if (configuration_type == "full" || configuration_type == "webservice") do -%>
set(dependencies ${dependencies} libcrails-action)
<% end -%>
<% if (configuration_type == "full") do -%>
set(dependencies ${dependencies} \
  libcrails-controllers libcrails-cookies libcrails-databases \
  libcrails-url-parser libcrails-form-parser libcrails-multipart-parser)
<% end -%>
<% if (std::find(formats.begin(), formats.end(), "json") != formats.end()) do -%>
set(dependencies ${dependencies} libcrails-json-parser libcrails-json-views)
<% end -%>
<% if (std::find(formats.begin(), formats.end(), "xml") != formats.end()) do -%>
set(dependencies ${dependencies} libcrails-xml-parser)
<% end -%>
<% if (std::find(formats.begin(), formats.end(), "html") != formats.end()) do -%>
set(dependencies ${dependencies} libcrails-html-views)
<% end -%>

add_library(crails-app SHARED ${crails_app})
add_executable(server ${server_files})
add_executable(tests  ${tests_files})

set(dependencies libcrails
                 ${dependencies}
                 ${Boost_LIBRARIES}
                 pthread dl crypto ssl
                 )

# Custom dependencies (do not modify this line)

target_link_libraries(server ${dependencies})
target_link_libraries(tests  libcrails-tests ${dependencies} ${tests_dependencies})
