cmake_minimum_required(VERSION 2.8)

project(<%= options[:name] %>)
option(DEVELOPER_MODE  "enable debugging tools"       ON)

cmake_policy(SET CMP0042 OLD)

<% cxx_options  = ''
   cxx_options += " -DUSE_SEGVCATCH" unless options[:segvcatch] != true -%>
set(CMAKE_CXX_FLAGS "-std=c++11 -Wall -Wno-unknown-pragmas -Wno-deprecated-declarations -pedantic <%= cxx_options %>")

find_package(cppnetlib REQUIRED)
find_package(Boost COMPONENTS thread filesystem program_options system random REQUIRED)

include_directories(include /usr/local/include ${CPPNETLIB_INCLUDE_DIRS} ${Boost_INCLUDE_DIRS} .)

if (DEVELOPER_MODE)
  set(CMAKE_BUILD_TYPE "Debug")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DSERVER_DEBUG")
else()
  set(CMAKE_BUILD_TYPE "Release")
endif()

file(GLOB_RECURSE crails_app
     app/controllers/*.cpp
     app/models/*.cpp
     app/models/*.cxx
     app/views/*.cpp
     app/routes.cpp
     config/*.cpp
     lib/*.cpp)

file(GLOB_RECURSE server_files
     app/main.cpp)

file(GLOB_RECURSE tests_files
     spec/*.cpp)

add_library(crails-app SHARED ${crails_app})
add_executable(server ${server_files})
add_executable(tests  ${tests_files})

if(DEVELOPER_MODE)
  set(crails-suffix -debug)
endif()

set(dependencies      crails-core${crails-suffix}
                      crails-html${crails-suffix}
                      crails-app
                      ${Boost_LIBRARIES}
                      pthread dl crypto ssl
                      ${CPPNETLIB_LIBRARIES}
                      <% if options[:segvcatch] == true %> segvcatch <% end %>)

<%= CMAKE_CUSTOM_DEPENDENCIES_HEADER %>

target_link_libraries(server ${dependencies})
target_link_libraries(tests  crails-tests${crails-suffix} ${dependencies})
